{
  "stats": {
    "suites": 2,
    "tests": 3,
    "passes": 2,
    "pending": 0,
    "failures": 1,
    "start": "2022-04-29T18:33:45.353Z",
    "end": "2022-04-29T18:34:00.173Z",
    "duration": 14820,
    "testsRegistered": 3,
    "passPercent": 66.66666666666666,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "563764da-e556-4d1c-bfbb-db23a9e36de3",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9cd6f798-a749-4559-b8ee-74d4c9ab9bd7",
          "title": "add todo tests",
          "fullFile": "C:\\Users\\leyen\\Documents\\Projetos\\testing-automation\\seleniumDemo\\test\\firstTest.js",
          "file": "\\test\\firstTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "successfully adds a todo to application",
              "fullTitle": "add todo tests successfully adds a todo to application",
              "timedOut": null,
              "duration": 8334,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let driver = await new Builder().forBrowser(\"firefox\").build();\n        await driver.get(\"http://lambdatest.github.io/sample-todo-app\");\n        await driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Learn Selenium\", Key.RETURN);\n        //retrieves the last element content of a list\n        let todoText = await driver.findElement(By.xpath(\"//li[last()]\")).getText().then(function(value){\n             return value;\n        });\n        //chai assertion\n        todoText.should.equal(\"Learn Selenium\");\n        await driver.quit();",
              "err": {},
              "uuid": "cc2b865a-13bf-4454-a400-aebac48a573f",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cc2b865a-13bf-4454-a400-aebac48a573f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8334,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "09e73737-8a87-4515-9568-3e65c6948de6",
          "title": "add anoother todo tests",
          "fullFile": "C:\\Users\\leyen\\Documents\\Projetos\\testing-automation\\seleniumDemo\\test\\secondtest.js",
          "file": "\\test\\secondtest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "successfully adds another todo to application",
              "fullTitle": "add anoother todo tests successfully adds another todo to application",
              "timedOut": null,
              "duration": 8536,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let driver = await new Builder().forBrowser(\"firefox\").build();\n        await driver.get(\"http://lambdatest.github.io/sample-todo-app\");\n        await driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Learn Selenium\", Key.RETURN);\n        //retrieves the last element content of a list\n        let todoText = await driver.findElement(By.xpath(\"//li[last()]\")).getText().then(function(value){\n             return value;\n        });\n        //chai assertion\n        todoText.should.equal(\"Learn Selenium\");\n        await driver.quit();",
              "err": {},
              "uuid": "c4e77380-f044-4828-8f4d-bedf7b00f2db",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adding a new teast for reporting",
              "fullTitle": "add anoother todo tests Adding a new teast for reporting",
              "timedOut": null,
              "duration": 5510,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let driver = await new Builder().forBrowser(\"firefox\").build();\n        await driver.get(\"http://lambdatest.github.io/sample-todo-app\");\n        await driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Learn Selenium\", Key.RETURN);\n        //retrieves the last element content of a list\n        let todoText = await driver.findElement(By.xpath(\"//li[last()]\")).getText().then(function(value){\n             return value;\n        });\n        //chai assertion\n        todoText.should.equal(\"Learn Javascript\");\n        await driver.quit();",
              "err": {
                "message": "AssertionError: expected 'Learn Selenium' to equal 'Learn Javascript'",
                "estack": "AssertionError: expected 'Learn Selenium' to equal 'Learn Javascript'\n    at Context.<anonymous> (test\\secondtest.js:43:25)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": "- Learn Selenium\n+ Learn Javascript\n"
              },
              "uuid": "76b08480-da80-403f-b557-4310a5392e15",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c4e77380-f044-4828-8f4d-bedf7b00f2db"
          ],
          "failures": [
            "76b08480-da80-403f-b557-4310a5392e15"
          ],
          "pending": [],
          "skipped": [],
          "duration": 14046,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.2.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}